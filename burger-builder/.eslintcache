[{"/home/codespace/workspace/react-test/burger-builder/src/index.js":"1","/home/codespace/workspace/react-test/burger-builder/src/App.js":"2","/home/codespace/workspace/react-test/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js":"3","/home/codespace/workspace/react-test/burger-builder/src/components/Layout/Layout.js":"4","/home/codespace/workspace/react-test/burger-builder/src/components/Burger/Burger.js":"5","/home/codespace/workspace/react-test/burger-builder/src/components/Burger/BurgerIngredient/BurgerIngredient.js":"6","/home/codespace/workspace/react-test/burger-builder/src/hoc/Aux.js":"7","/home/codespace/workspace/react-test/burger-builder/src/reportWebVitals.js":"8"},{"size":500,"mtime":1609269388631,"results":"9","hashOfConfig":"10"},{"size":336,"mtime":1609268643619,"results":"11","hashOfConfig":"10"},{"size":338,"mtime":1609268647887,"results":"12","hashOfConfig":"10"},{"size":308,"mtime":1609268646911,"results":"13","hashOfConfig":"10"},{"size":488,"mtime":1609268645175,"results":"14","hashOfConfig":"10"},{"size":1480,"mtime":1609268646035,"results":"15","hashOfConfig":"10"},{"size":60,"mtime":1609269284535,"results":"16","hashOfConfig":"10"},{"size":388,"mtime":1609269356247,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"sc8siv",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/codespace/workspace/react-test/burger-builder/src/index.js",[],["37","38"],"/home/codespace/workspace/react-test/burger-builder/src/App.js",[],"/home/codespace/workspace/react-test/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js",[],"/home/codespace/workspace/react-test/burger-builder/src/components/Layout/Layout.js",[],"/home/codespace/workspace/react-test/burger-builder/src/components/Burger/Burger.js",["39"],"import { createRef } from \"react\";\n\nimport React from 'react';\nimport classes from './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    return(\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\"/>\n            <BurgerIngredient type=\"cheese\"/>\n            <BurgerIngredient type=\"meat\"/>\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    );\n};\n\nexport default burger;","/home/codespace/workspace/react-test/burger-builder/src/components/Burger/BurgerIngredient/BurgerIngredient.js",["40"],"import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './BurgerIngredient.css'\n\nclass BurgerIngredient extends Component {\n    render(){\n        let ingredient = null;\n        \n        switch(this.props.type) {\n            case ('bread-bottom'): \n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'): ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seed1}></div>\n                        <div className={classes.Seed2}></div>\n                    </div>\n                );\n                break;\n            case('meat'): \n            ingredient = <div className={classes.Meat}></div>;\n                break;\n            case('cheese'): \n            ingredient = <div className={classes.Cheese}></div>;\n                break; \n            case('becon'): \n            ingredient = <div className={classes.Becon}></div>;\n                break;  \n            case('meat'): \n            ingredient = <div className={classes.Meat}></div>;\n                break;  \n            case('salad'): \n            ingredient = <div className={classes.Salad}></div>;\n                break;       \n            default:\n            ingredient = null;         \n        }\n        return ingredient;\n    }\n}   \n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","/home/codespace/workspace/react-test/burger-builder/src/hoc/Aux.js",[],"/home/codespace/workspace/react-test/burger-builder/src/reportWebVitals.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":19},{"ruleId":"49","severity":1,"message":"50","line":29,"column":13,"nodeType":"51","messageId":"52","endLine":31,"endColumn":23},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'createRef' is defined but never used.","Identifier","unusedVar","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-global-assign","no-unsafe-negation"]