[{"/home/codespace/workspace/burger-builder/src/index.js":"1","/home/codespace/workspace/burger-builder/src/App.js":"2","/home/codespace/workspace/burger-builder/src/reportWebVitals.js":"3","/home/codespace/workspace/burger-builder/src/hoc/Aux.js":"4","/home/codespace/workspace/burger-builder/src/components/Layout/Layout.js":"5","/home/codespace/workspace/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js":"6","/home/codespace/workspace/burger-builder/src/components/Burger/Burger.js":"7","/home/codespace/workspace/burger-builder/src/components/Burger/BurgerIngredient/BurgerIngredient.js":"8"},{"size":540,"mtime":1609197859354,"results":"9","hashOfConfig":"10"},{"size":336,"mtime":1609185429201,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608916200211,"results":"12","hashOfConfig":"10"},{"size":60,"mtime":1609182275380,"results":"13","hashOfConfig":"10"},{"size":308,"mtime":1609185988970,"results":"14","hashOfConfig":"10"},{"size":338,"mtime":1609196242309,"results":"15","hashOfConfig":"10"},{"size":488,"mtime":1609196162168,"results":"16","hashOfConfig":"10"},{"size":1480,"mtime":1609195478225,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"100h1qo",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"/home/codespace/workspace/burger-builder/src/index.js",["37"],"/home/codespace/workspace/burger-builder/src/App.js",[],["38","39"],"/home/codespace/workspace/burger-builder/src/reportWebVitals.js",[],"/home/codespace/workspace/burger-builder/src/hoc/Aux.js",[],"/home/codespace/workspace/burger-builder/src/components/Layout/Layout.js",[],"/home/codespace/workspace/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js",[],"/home/codespace/workspace/burger-builder/src/components/Burger/Burger.js",["40"],"import { createRef } from \"react\";\n\nimport React from 'react';\nimport classes from './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    return(\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\"/>\n            <BurgerIngredient type=\"cheese\"/>\n            <BurgerIngredient type=\"meat\"/>\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    );\n};\n\nexport default burger;","/home/codespace/workspace/burger-builder/src/components/Burger/BurgerIngredient/BurgerIngredient.js",["41"],"import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './BurgerIngredient.css'\n\nclass BurgerIngredient extends Component {\n    render(){\n        let ingredient = null;\n        \n        switch(this.props.type) {\n            case ('bread-bottom'): \n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'): ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seed1}></div>\n                        <div className={classes.Seed2}></div>\n                    </div>\n                );\n                break;\n            case('meat'): \n            ingredient = <div className={classes.Meat}></div>;\n                break;\n            case('cheese'): \n            ingredient = <div className={classes.Cheese}></div>;\n                break; \n            case('becon'): \n            ingredient = <div className={classes.Becon}></div>;\n                break;  \n            case('meat'): \n            ingredient = <div className={classes.Meat}></div>;\n                break;  \n            case('salad'): \n            ingredient = <div className={classes.Salad}></div>;\n                break;       \n            default:\n            ingredient = null;         \n        }\n        return ingredient;\n    }\n}   \n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;",{"ruleId":"42","severity":1,"message":"43","line":5,"column":8,"nodeType":"44","messageId":"45","endLine":5,"endColumn":14},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"42","severity":1,"message":"50","line":1,"column":10,"nodeType":"44","messageId":"45","endLine":1,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":29,"column":13,"nodeType":"53","messageId":"54","endLine":31,"endColumn":23},"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"'createRef' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-global-assign","no-unsafe-negation"]